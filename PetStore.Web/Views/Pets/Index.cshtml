@model PagedList.IPagedList<PetStore.Services.Pet>
@using PagedList;
@using PagedList.Mvc;
@using PetStore.Services;

@{
    ViewBag.Title = "Pets";    
}

<h1>Pets</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Add</a>
</p>

@using (Html.BeginForm("Index", "Pets", FormMethod.Get))
{
    <p>
        @Html.DropDownList("typeFilter", Html.GetEnumSelectList<PetType>(),"All")
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" />                
    </p>
}

@{
    object GetValues()
    {
        return new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter };
    }
}

@if (Model != null){
    <table class="table">
        <thead>
            <tr>
                <th>                    
                    @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Name), "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Type)
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().DateOfBirth), "Index", new { sortOrder = ViewBag.DobSortParm, currentFilter=ViewBag.CurrentFilter })                
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Weight), "Index", new { sortOrder = ViewBag.WeightSortParm, currentFilter=ViewBag.CurrentFilter })                                
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Weight)
                    </td>
                    <td>
                        <div class="form-group">                            
                            <form asp-route-id="@item.ID" asp-action="Delete" id="frmDelete">
                                <input type="hidden" asp-for="@item.ID" />
                                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID">Edit</a>                                                
                                <input type="submit" asp-for="@item.ID" value="Delete" class="btn btn-danger" />    
                            </form>
                        </div>                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
 
<script src="https://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

<script type="text/javascript">
    $("body").on("submit", "#frmDelete", function () {                
        return confirm("Are you sure you want to delete this pet?");
    });  
    
    window.onload = function() {        
        if ('@ViewBag.Saved'){
            alert("Saved");
        }         
    };
</script>


@*
David: Attempted creating yes/no confirmation


<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
 
<script src="https://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css" />

<script type="text/javascript">

    var postUrl = '@Url.Action("Delete", "Pets")';

    //$("body").on("click", "#cmdDelete", function (e) {
    //    e.preventDefault();
    //    DeletePet();
    //    //return confirm("Are you sure you want to delete this pet?");
    //});


    $(function () {
        $('#cmdDelete').click(function (e) {
            e.preventDefault();
            DeletePet();
        });
    });

    function DeletePet() {
        var question = "Are you sure you want to delete this pet?";

        ConfirmDelete(question).then(function (answer) {
            var ans = (String(answer) === "true");
            if (ans) {
                $('#Activity').val('Delete');
                var data = $('#frmDelete').serialize();
                $.ajax({
                    type: "POST",
                    url: postUrl,
                    data: data
                });
            }
        });
    }

    function ConfirmDelete(question) {
        
        var defer = $.Deferred();
        alert('in confirm');
        $('<div id="id="divDeleteClientRequest""></div>')
            .html(question)
            .dialog({
                autoOpen: true,
                modal: true,
                draggable: true,
                title: 'Confirm Delete',
                buttons: {
                    "Yes": function () {
                        defer.resolve("true");
                        $(this).dialog("close");
                    },
                    "No": function () {
                        defer.resolve("false");
                        $(this).dialog("close");
                    }
                },
                close: function () {
                    $(this).dialog('destroy').remove();
                }
            });

        return defer.promise();
    }

</script>
*@


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@*

Unable to resolve this issue: PagedList MVC does not contain a definition for PagedListPager
Moved on to other more important tasks :)
*@

@*<div>
@Html.PagedListPager(Model, page => Url.Action("Index", 
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>*@